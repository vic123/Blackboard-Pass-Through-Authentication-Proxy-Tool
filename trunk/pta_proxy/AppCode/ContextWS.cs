//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="Context.WSSOAP11Binding", Namespace="http://context.ws.blackboard/")]
public partial class ContextWS : Microsoft.Web.Services3.WebServicesClientProtocol {
    
    private System.Threading.SendOrPostCallback getMyMembershipsOperationCompleted;
    
    private System.Threading.SendOrPostCallback loginOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSystemInstallationIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback loginToolOperationCompleted;
    
    private System.Threading.SendOrPostCallback loginTicketOperationCompleted;
    
    private System.Threading.SendOrPostCallback getMembershipsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getRequiredEntitlementsOperationCompleted;
    
    private System.Threading.SendOrPostCallback initializeOperationCompleted;
    
    private System.Threading.SendOrPostCallback extendSessionLifeOperationCompleted;
    
    private System.Threading.SendOrPostCallback getServerVersionOperationCompleted;
    
    private System.Threading.SendOrPostCallback registerToolOperationCompleted;
    
    private System.Threading.SendOrPostCallback emulateUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback logoutOperationCompleted;
    
    /// <remarks/>
    public ContextWS() {
        this.Url = "http://174.129.97.205:80/webapps/ws/services/Context.WS";
    }
    
    /// <remarks/>
    public event getMyMembershipsCompletedEventHandler getMyMembershipsCompleted;
    
    /// <remarks/>
    public event loginCompletedEventHandler loginCompleted;
    
    /// <remarks/>
    public event getSystemInstallationIdCompletedEventHandler getSystemInstallationIdCompleted;
    
    /// <remarks/>
    public event loginToolCompletedEventHandler loginToolCompleted;
    
    /// <remarks/>
    public event loginTicketCompletedEventHandler loginTicketCompleted;
    
    /// <remarks/>
    public event getMembershipsCompletedEventHandler getMembershipsCompleted;
    
    /// <remarks/>
    public event getRequiredEntitlementsCompletedEventHandler getRequiredEntitlementsCompleted;
    
    /// <remarks/>
    public event initializeCompletedEventHandler initializeCompleted;
    
    /// <remarks/>
    public event extendSessionLifeCompletedEventHandler extendSessionLifeCompleted;
    
    /// <remarks/>
    public event getServerVersionCompletedEventHandler getServerVersionCompleted;
    
    /// <remarks/>
    public event registerToolCompletedEventHandler registerToolCompleted;
    
    /// <remarks/>
    public event emulateUserCompletedEventHandler emulateUserCompleted;
    
    /// <remarks/>
    public event logoutCompletedEventHandler logoutCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getMyMemberships", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("getMyMembershipsResponse", Namespace="http://context.ws.blackboard")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("return")]
    public CourseIdVO[] getMyMemberships() {
        object[] results = this.Invoke("getMyMemberships", new object[0]);
        return ((CourseIdVO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetMyMemberships(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMyMemberships", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public CourseIdVO[] EndgetMyMemberships(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CourseIdVO[])(results[0]));
    }
    
    /// <remarks/>
    public void getMyMembershipsAsync() {
        this.getMyMembershipsAsync(null);
    }
    
    /// <remarks/>
    public void getMyMembershipsAsync(object userState) {
        if ((this.getMyMembershipsOperationCompleted == null)) {
            this.getMyMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyMembershipsOperationCompleted);
        }
        this.InvokeAsync("getMyMemberships", new object[0], this.getMyMembershipsOperationCompleted, userState);
    }
    
    private void OngetMyMembershipsOperationCompleted(object arg) {
        if ((this.getMyMembershipsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getMyMembershipsCompleted(this, new getMyMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("login", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void login([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientVendorId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientProgramId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loginExtraInfo, long expectedLifeSeconds, [System.Xml.Serialization.XmlIgnoreAttribute()] bool expectedLifeSecondsSpecified, out bool @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
        object[] results = this.Invoke("login", new object[] {
                    userid,
                    password,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified});
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginlogin(string userid, string password, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("login", new object[] {
                    userid,
                    password,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void Endlogin(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public void loginAsync(string userid, string password, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified) {
        this.loginAsync(userid, password, clientVendorId, clientProgramId, loginExtraInfo, expectedLifeSeconds, expectedLifeSecondsSpecified, null);
    }
    
    /// <remarks/>
    public void loginAsync(string userid, string password, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified, object userState) {
        if ((this.loginOperationCompleted == null)) {
            this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
        }
        this.InvokeAsync("login", new object[] {
                    userid,
                    password,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified}, this.loginOperationCompleted, userState);
    }
    
    private void OnloginOperationCompleted(object arg) {
        if ((this.loginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getSystemInstallationId", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("getSystemInstallationIdResponse", Namespace="http://context.ws.blackboard")]
    public getSystemInstallationIdResponse getSystemInstallationId() {
        object[] results = this.Invoke("getSystemInstallationId", new object[0]);
        return ((getSystemInstallationIdResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSystemInstallationId(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSystemInstallationId", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public getSystemInstallationIdResponse EndgetSystemInstallationId(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((getSystemInstallationIdResponse)(results[0]));
    }
    
    /// <remarks/>
    public void getSystemInstallationIdAsync() {
        this.getSystemInstallationIdAsync(null);
    }
    
    /// <remarks/>
    public void getSystemInstallationIdAsync(object userState) {
        if ((this.getSystemInstallationIdOperationCompleted == null)) {
            this.getSystemInstallationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemInstallationIdOperationCompleted);
        }
        this.InvokeAsync("getSystemInstallationId", new object[0], this.getSystemInstallationIdOperationCompleted, userState);
    }
    
    private void OngetSystemInstallationIdOperationCompleted(object arg) {
        if ((this.getSystemInstallationIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSystemInstallationIdCompleted(this, new getSystemInstallationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("loginTool", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void loginTool([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientVendorId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientProgramId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loginExtraInfo, long expectedLifeSeconds, [System.Xml.Serialization.XmlIgnoreAttribute()] bool expectedLifeSecondsSpecified, out bool @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
        object[] results = this.Invoke("loginTool", new object[] {
                    password,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified});
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginloginTool(string password, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("loginTool", new object[] {
                    password,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndloginTool(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public void loginToolAsync(string password, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified) {
        this.loginToolAsync(password, clientVendorId, clientProgramId, loginExtraInfo, expectedLifeSeconds, expectedLifeSecondsSpecified, null);
    }
    
    /// <remarks/>
    public void loginToolAsync(string password, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified, object userState) {
        if ((this.loginToolOperationCompleted == null)) {
            this.loginToolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginToolOperationCompleted);
        }
        this.InvokeAsync("loginTool", new object[] {
                    password,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified}, this.loginToolOperationCompleted, userState);
    }
    
    private void OnloginToolOperationCompleted(object arg) {
        if ((this.loginToolCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginToolCompleted(this, new loginToolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("loginTicket", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void loginTicket([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ticket, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientVendorId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientProgramId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loginExtraInfo, long expectedLifeSeconds, [System.Xml.Serialization.XmlIgnoreAttribute()] bool expectedLifeSecondsSpecified, out bool @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
        object[] results = this.Invoke("loginTicket", new object[] {
                    ticket,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified});
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginloginTicket(string ticket, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("loginTicket", new object[] {
                    ticket,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndloginTicket(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public void loginTicketAsync(string ticket, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified) {
        this.loginTicketAsync(ticket, clientVendorId, clientProgramId, loginExtraInfo, expectedLifeSeconds, expectedLifeSecondsSpecified, null);
    }
    
    /// <remarks/>
    public void loginTicketAsync(string ticket, string clientVendorId, string clientProgramId, string loginExtraInfo, long expectedLifeSeconds, bool expectedLifeSecondsSpecified, object userState) {
        if ((this.loginTicketOperationCompleted == null)) {
            this.loginTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginTicketOperationCompleted);
        }
        this.InvokeAsync("loginTicket", new object[] {
                    ticket,
                    clientVendorId,
                    clientProgramId,
                    loginExtraInfo,
                    expectedLifeSeconds,
                    expectedLifeSecondsSpecified}, this.loginTicketOperationCompleted, userState);
    }
    
    private void OnloginTicketOperationCompleted(object arg) {
        if ((this.loginTicketCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginTicketCompleted(this, new loginTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getMemberships", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public CourseIdVO[] getMemberships([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid) {
        object[] results = this.Invoke("getMemberships", new object[] {
                    userid});
        return ((CourseIdVO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetMemberships(string userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMemberships", new object[] {
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public CourseIdVO[] EndgetMemberships(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CourseIdVO[])(results[0]));
    }
    
    /// <remarks/>
    public void getMembershipsAsync(string userid) {
        this.getMembershipsAsync(userid, null);
    }
    
    /// <remarks/>
    public void getMembershipsAsync(string userid, object userState) {
        if ((this.getMembershipsOperationCompleted == null)) {
            this.getMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMembershipsOperationCompleted);
        }
        this.InvokeAsync("getMemberships", new object[] {
                    userid}, this.getMembershipsOperationCompleted, userState);
    }
    
    private void OngetMembershipsOperationCompleted(object arg) {
        if ((this.getMembershipsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getMembershipsCompleted(this, new getMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getRequiredEntitlements", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public string[] getRequiredEntitlements([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string method) {
        object[] results = this.Invoke("getRequiredEntitlements", new object[] {
                    method});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRequiredEntitlements(string method, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRequiredEntitlements", new object[] {
                    method}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetRequiredEntitlements(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getRequiredEntitlementsAsync(string method) {
        this.getRequiredEntitlementsAsync(method, null);
    }
    
    /// <remarks/>
    public void getRequiredEntitlementsAsync(string method, object userState) {
        if ((this.getRequiredEntitlementsOperationCompleted == null)) {
            this.getRequiredEntitlementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRequiredEntitlementsOperationCompleted);
        }
        this.InvokeAsync("getRequiredEntitlements", new object[] {
                    method}, this.getRequiredEntitlementsOperationCompleted, userState);
    }
    
    private void OngetRequiredEntitlementsOperationCompleted(object arg) {
        if ((this.getRequiredEntitlementsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getRequiredEntitlementsCompleted(this, new getRequiredEntitlementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("initialize", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("initializeResponse", Namespace="http://context.ws.blackboard")]
    public initializeResponse initialize() {
        object[] results = this.Invoke("initialize", new object[0]);
        return ((initializeResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Begininitialize(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("initialize", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public initializeResponse Endinitialize(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((initializeResponse)(results[0]));
    }
    
    /// <remarks/>
    public void initializeAsync() {
        this.initializeAsync(null);
    }
    
    /// <remarks/>
    public void initializeAsync(object userState) {
        if ((this.initializeOperationCompleted == null)) {
            this.initializeOperationCompleted = new System.Threading.SendOrPostCallback(this.OninitializeOperationCompleted);
        }
        this.InvokeAsync("initialize", new object[0], this.initializeOperationCompleted, userState);
    }
    
    private void OninitializeOperationCompleted(object arg) {
        if ((this.initializeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.initializeCompleted(this, new initializeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("extendSessionLife", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void extendSessionLife(long additionalSeconds, [System.Xml.Serialization.XmlIgnoreAttribute()] bool additionalSecondsSpecified, out bool @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
        object[] results = this.Invoke("extendSessionLife", new object[] {
                    additionalSeconds,
                    additionalSecondsSpecified});
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginextendSessionLife(long additionalSeconds, bool additionalSecondsSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("extendSessionLife", new object[] {
                    additionalSeconds,
                    additionalSecondsSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndextendSessionLife(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public void extendSessionLifeAsync(long additionalSeconds, bool additionalSecondsSpecified) {
        this.extendSessionLifeAsync(additionalSeconds, additionalSecondsSpecified, null);
    }
    
    /// <remarks/>
    public void extendSessionLifeAsync(long additionalSeconds, bool additionalSecondsSpecified, object userState) {
        if ((this.extendSessionLifeOperationCompleted == null)) {
            this.extendSessionLifeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextendSessionLifeOperationCompleted);
        }
        this.InvokeAsync("extendSessionLife", new object[] {
                    additionalSeconds,
                    additionalSecondsSpecified}, this.extendSessionLifeOperationCompleted, userState);
    }
    
    private void OnextendSessionLifeOperationCompleted(object arg) {
        if ((this.extendSessionLifeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.extendSessionLifeCompleted(this, new extendSessionLifeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getServerVersion", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public VersionVO getServerVersion([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] VersionVO unused) {
        object[] results = this.Invoke("getServerVersion", new object[] {
                    unused});
        return ((VersionVO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetServerVersion(VersionVO unused, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getServerVersion", new object[] {
                    unused}, callback, asyncState);
    }
    
    /// <remarks/>
    public VersionVO EndgetServerVersion(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((VersionVO)(results[0]));
    }
    
    /// <remarks/>
    public void getServerVersionAsync(VersionVO unused) {
        this.getServerVersionAsync(unused, null);
    }
    
    /// <remarks/>
    public void getServerVersionAsync(VersionVO unused, object userState) {
        if ((this.getServerVersionOperationCompleted == null)) {
            this.getServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerVersionOperationCompleted);
        }
        this.InvokeAsync("getServerVersion", new object[] {
                    unused}, this.getServerVersionOperationCompleted, userState);
    }
    
    private void OngetServerVersionOperationCompleted(object arg) {
        if ((this.getServerVersionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getServerVersionCompleted(this, new getServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("registerTool", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public RegisterToolResultVO registerTool([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientVendorId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientProgramId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string registrationPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string initialSharedSecret, [System.Xml.Serialization.XmlElementAttribute("requiredToolMethods", IsNullable=true)] string[] requiredToolMethods, [System.Xml.Serialization.XmlElementAttribute("requiredTicketMethods", IsNullable=true)] string[] requiredTicketMethods) {
        object[] results = this.Invoke("registerTool", new object[] {
                    clientVendorId,
                    clientProgramId,
                    registrationPassword,
                    description,
                    initialSharedSecret,
                    requiredToolMethods,
                    requiredTicketMethods});
        return ((RegisterToolResultVO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginregisterTool(string clientVendorId, string clientProgramId, string registrationPassword, string description, string initialSharedSecret, string[] requiredToolMethods, string[] requiredTicketMethods, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("registerTool", new object[] {
                    clientVendorId,
                    clientProgramId,
                    registrationPassword,
                    description,
                    initialSharedSecret,
                    requiredToolMethods,
                    requiredTicketMethods}, callback, asyncState);
    }
    
    /// <remarks/>
    public RegisterToolResultVO EndregisterTool(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((RegisterToolResultVO)(results[0]));
    }
    
    /// <remarks/>
    public void registerToolAsync(string clientVendorId, string clientProgramId, string registrationPassword, string description, string initialSharedSecret, string[] requiredToolMethods, string[] requiredTicketMethods) {
        this.registerToolAsync(clientVendorId, clientProgramId, registrationPassword, description, initialSharedSecret, requiredToolMethods, requiredTicketMethods, null);
    }
    
    /// <remarks/>
    public void registerToolAsync(string clientVendorId, string clientProgramId, string registrationPassword, string description, string initialSharedSecret, string[] requiredToolMethods, string[] requiredTicketMethods, object userState) {
        if ((this.registerToolOperationCompleted == null)) {
            this.registerToolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterToolOperationCompleted);
        }
        this.InvokeAsync("registerTool", new object[] {
                    clientVendorId,
                    clientProgramId,
                    registrationPassword,
                    description,
                    initialSharedSecret,
                    requiredToolMethods,
                    requiredTicketMethods}, this.registerToolOperationCompleted, userState);
    }
    
    private void OnregisterToolOperationCompleted(object arg) {
        if ((this.registerToolCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.registerToolCompleted(this, new registerToolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("emulateUser", RequestNamespace="http://context.ws.blackboard", ResponseNamespace="http://context.ws.blackboard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void emulateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userToEmulate, out bool @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
        object[] results = this.Invoke("emulateUser", new object[] {
                    userToEmulate});
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginemulateUser(string userToEmulate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("emulateUser", new object[] {
                    userToEmulate}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndemulateUser(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((bool)(results[0]));
        returnSpecified = ((bool)(results[1]));
    }
    
    /// <remarks/>
    public void emulateUserAsync(string userToEmulate) {
        this.emulateUserAsync(userToEmulate, null);
    }
    
    /// <remarks/>
    public void emulateUserAsync(string userToEmulate, object userState) {
        if ((this.emulateUserOperationCompleted == null)) {
            this.emulateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemulateUserOperationCompleted);
        }
        this.InvokeAsync("emulateUser", new object[] {
                    userToEmulate}, this.emulateUserOperationCompleted, userState);
    }
    
    private void OnemulateUserOperationCompleted(object arg) {
        if ((this.emulateUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.emulateUserCompleted(this, new emulateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("logout", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("logoutResponse", Namespace="http://context.ws.blackboard")]
    public logoutResponse logout() {
        object[] results = this.Invoke("logout", new object[0]);
        return ((logoutResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginlogout(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("logout", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public logoutResponse Endlogout(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((logoutResponse)(results[0]));
    }
    
    /// <remarks/>
    public void logoutAsync() {
        this.logoutAsync(null);
    }
    
    /// <remarks/>
    public void logoutAsync(object userState) {
        if ((this.logoutOperationCompleted == null)) {
            this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
        }
        this.InvokeAsync("logout", new object[0], this.logoutOperationCompleted, userState);
    }
    
    private void OnlogoutOperationCompleted(object arg) {
        if ((this.logoutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.platform.blackboard/xsd")]
public partial class CourseIdVO {
    
    private string externalIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string externalId {
        get {
            return this.externalIdField;
        }
        set {
            this.externalIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://context.ws.blackboard/xsd")]
public partial class RegisterToolResultVO {
    
    private string[] failureErrorsField;
    
    private string proxyToolGuidField;
    
    private bool statusField;
    
    private bool statusFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("failureErrors", IsNullable=true)]
    public string[] failureErrors {
        get {
            return this.failureErrorsField;
        }
        set {
            this.failureErrorsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string proxyToolGuid {
        get {
            return this.proxyToolGuidField;
        }
        set {
            this.proxyToolGuidField = value;
        }
    }
    
    /// <remarks/>
    public bool status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool statusSpecified {
        get {
            return this.statusFieldSpecified;
        }
        set {
            this.statusFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.platform.blackboard/xsd")]
public partial class VersionVO {
    
    private long versionField;
    
    private bool versionFieldSpecified;
    
    /// <remarks/>
    public long version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool versionSpecified {
        get {
            return this.versionFieldSpecified;
        }
        set {
            this.versionFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://context.ws.blackboard")]
public partial class getSystemInstallationIdResponse {
    
    private string returnField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string @return {
        get {
            return this.returnField;
        }
        set {
            this.returnField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://context.ws.blackboard")]
public partial class initializeResponse {
    
    private string returnField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string @return {
        get {
            return this.returnField;
        }
        set {
            this.returnField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://context.ws.blackboard")]
public partial class logoutResponse {
    
    private bool returnField;
    
    private bool returnFieldSpecified;
    
    /// <remarks/>
    public bool @return {
        get {
            return this.returnField;
        }
        set {
            this.returnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool returnSpecified {
        get {
            return this.returnFieldSpecified;
        }
        set {
            this.returnFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getMyMembershipsCompletedEventHandler(object sender, getMyMembershipsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getMyMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getMyMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CourseIdVO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CourseIdVO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getSystemInstallationIdCompletedEventHandler(object sender, getSystemInstallationIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getSystemInstallationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSystemInstallationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public getSystemInstallationIdResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((getSystemInstallationIdResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void loginToolCompletedEventHandler(object sender, loginToolCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginToolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal loginToolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void loginTicketCompletedEventHandler(object sender, loginTicketCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal loginTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getMembershipsCompletedEventHandler(object sender, getMembershipsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CourseIdVO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CourseIdVO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getRequiredEntitlementsCompletedEventHandler(object sender, getRequiredEntitlementsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getRequiredEntitlementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getRequiredEntitlementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void initializeCompletedEventHandler(object sender, initializeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class initializeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal initializeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public initializeResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((initializeResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void extendSessionLifeCompletedEventHandler(object sender, extendSessionLifeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class extendSessionLifeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal extendSessionLifeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getServerVersionCompletedEventHandler(object sender, getServerVersionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public VersionVO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((VersionVO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void registerToolCompletedEventHandler(object sender, registerToolCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class registerToolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal registerToolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public RegisterToolResultVO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((RegisterToolResultVO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void emulateUserCompletedEventHandler(object sender, emulateUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class emulateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal emulateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public logoutResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((logoutResponse)(this.results[0]));
        }
    }
}
